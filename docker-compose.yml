version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: projectgamma-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: projectgamma
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: projectgamma-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://postgres:postgres123@database:5432/projectgamma
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - database
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: projectgamma-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

  # Database Admin Interface
  adminer:
    image: adminer:4.8.1
    container_name: projectgamma-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - database
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 